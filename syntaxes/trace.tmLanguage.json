{
	"name": "Amalgam Trace",
	"scopeName": "source.trace",
	"fileTypes": [
		"trace"
	],
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#directives"
		}
	],
	"repository": {
		"comments": {
			"begin": "(^[ ]+)?((?<!\\\\)(\\\\\\\\)*)(?=#(?! RESULT >))",
			"beginCaptures": {
				"1": {
					"name": "punctuation.whitespace.comment.leading.trace"
				}
			},
			"end": "(?!\\G)",
			"patterns": [
				{
					"begin": "#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.trace"
						}
					},
					"end": "(?=[^\\\\])$",
					"name": "comment.line.number-sign.trace",
					"patterns": [
						{
							"match": "\\\\\\n",
							"name": "constant.character.escape.continuation.trace"
						}
					]
				}
			]
		},
		"directives": {
			"patterns": [
				{
					"begin": "^(EXECUTE_ENTITY_JSON|EXECUTE_ENTITY_JSON_LOGGED|SET_JSON_TO_LABEL) (\\S+) (\\S+) ",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.command.trace"
						},
						"2": {
							"name": "support.constant.command.trace"
						},
						"3": {
							"name": "entity.name.function.trace"
						}
					},
					"end": "$",
					"patterns": [
						{
							"begin": "",
							"end": "$",
							"contentName": "meta.embedded.block.json",
							"patterns": [
								{
									"include": "source.json"
								}
							]
						}
					]
				},
				{
					"match": "^(LOAD_ENTITY) (\\S+) (\\S+)(?: (\\S+))?(?: (\\S+))?(?: (\\S+))?(?: (\\S+))?(?: (\\S+))?(?: (\\S+))?$",
					"captures": {
						"1": {
							"name": "keyword.control.command.trace"
						},
						"2": {
							"name": "support.constant.command.trace"
						},
						"3": {
							"name": "string.quoted.double.trace"
						},
						"4": {
							"name": "string.quoted.double.trace"
						},
						"5": {
							"name": "constant.language.trace"
						},
						"6": {
							"name": "string.quoted.double.trace"
						},
						"7": {
							"name": "string.quoted.double.trace"
						},
						"8": {
							"name": "string.quoted.double.trace"
						},
						"9": {
							"name": "string.quoted.double.trace"
						}
					}
				},
				{
					"match": "^(CLONE_ENTITY) (\\S+) (\\S+)(?: (\\S+))?(?: (\\S+))?(?: (\\S+))?(?: (\\S+))?(?: (\\S+))?(?: (\\S+))?$",
					"captures": {
						"1": {
							"name": "keyword.control.command.trace"
						},
						"2": {
							"name": "support.constant.command.trace"
						},
						"3": {
							"name": "string.quoted.double.trace"
						},
						"4": {
							"name": "string.quoted.double.trace"
						},
						"5": {
							"name": "string.quoted.double.trace"
						},
						"6": {
							"name": "constant.language.trace"
						},
						"7": {
							"name": "string.quoted.double.trace"
						},
						"8": {
							"name": "string.quoted.double.trace"
						},
						"9": {
							"name": "string.quoted.double.trace"
						}
					}
				},
				{
					"match": "^(STORE_ENTITY) (\\S+) (\\S+)(?: (\\S+))?(?: (\\S+))?(?: (\\S+))?$",
					"captures": {
						"1": {
							"name": "keyword.control.command.trace"
						},
						"2": {
							"name": "support.constant.command.trace"
						},
						"3": {
							"name": "string.quoted.double.trace"
						},
						"4": {
							"name": "string.quoted.double.trace"
						},
						"5": {
							"name": "constant.language.trace"
						},
						"6": {
							"name": "string.quoted.double.trace"
						}
					}
				},
				{
					"match": "^(SET_ENTITY_PERMISSIONS|SET_RANDOM_SEED) (\\S+) (.*)$",
					"captures": {
						"1": {
							"name": "keyword.control.command.trace"
						},
						"2": {
							"name": "support.constant.command.trace"
						},
						"3": {
							"contentName": "meta.embedded.block.json",
							"patterns": [
								{
									"include": "source.json"
								}
							]
						}
					}
				},
				{
					"match": "^(DESTROY_ENTITY|GET_ENTITY_PERMISSIONS|SET_MAX_NUM_THREADS) (\\S+)?$",
					"captures": {
						"1": {
							"name": "keyword.control.command.trace"
						},
						"2": {
							"name": "support.constant.command.trace"
						}
					}
				},
				{
					"match": "^(VERIFY_ENTITY) (\\S+)?$",
					"captures": {
						"1": {
							"name": "keyword.control.command.trace"
						},
						"2": {
							"name": "string.quoted.double.trace"
						}
					}
				},
				{
					"match": "^(EVAL_ON_ENTITY) (\\S+) (.*)$",
					"captures": {
						"1": {
							"name": "keyword.control.command.trace"
						},
						"2": {
							"name": "support.constant.command.trace"
						},
						"3": {
							"name": "string.quoted.double.trace"
						}
					}
				},
				{
					"match": "^(GET_JSON_FROM_LABEL) (\\S+) (\\S+)$",
					"captures": {
						"1": {
							"name": "keyword.control.command.trace"
						},
						"2": {
							"name": "support.constant.command.trace"
						},
						"3": {
							"name": "entity.name.function.trace"
						}
					}
				},
				{
					"match": "^(VERSION|EXIT|GET_MAX_NUM_THREADS)$",
					"captures": {
						"1": {
							"name": "keyword.control.command.trace"
						}
					}
				},
				{
					"match": "^(#) (RESULT) ((>).*)$",
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.trace"
						},
						"2": {
							"name": "keyword.control.result.trace"
						},
						"3": {
							"patterns": [
								{
									"match": ">b'(.*)'$",
									"captures": {
										"1": {
											"contentName": "meta.embedded.block.json",
											"patterns": [
												{
													"include": "source.json"
												}
											]
										}
									}
								}
							]
						},
						"4": {
							"name": "punctuation.separator.trace"
						}
					}
				}
			]
		}
	}
}